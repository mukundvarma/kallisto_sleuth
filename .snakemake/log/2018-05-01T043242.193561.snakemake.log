Building DAG of jobs...
Using shell: /bin/bash
Provided cores: 1
Rules claiming more threads will be scaled down.
Unlimited resources: mem
Job counts:
	count	jobs
	1	all
	3	quantify
	1	sleuth
	5

rule quantify:
    input: ecoli_cdna/ecoli_state2_rep2.fastq.gz, ecoli_cdna/ecoli_state2_rep2_2.fastq.gz, reference/kallisto/ecoli_kallisto_index.fa
    output: outs/counts/ecoli_state2_rep2/abundance.tsv
    jobid: 4
    wildcards: sample=ecoli_state2_rep2
    resources: mem=4000

Finished job 4.
1 of 5 steps (20%) done

rule quantify:
    input: ecoli_cdna/ecoli_state1_rep2.fastq.gz, ecoli_cdna/ecoli_state1_rep2_2.fastq.gz, reference/kallisto/ecoli_kallisto_index.fa
    output: outs/counts/ecoli_state1_rep2/abundance.tsv
    jobid: 5
    wildcards: sample=ecoli_state1_rep2
    resources: mem=4000

Finished job 5.
2 of 5 steps (40%) done

rule quantify:
    input: ecoli_cdna/ecoli_state1_rep1.fastq.gz, ecoli_cdna/ecoli_state1_rep1_2.fastq.gz, reference/kallisto/ecoli_kallisto_index.fa
    output: outs/counts/ecoli_state1_rep1/abundance.tsv
    jobid: 1
    wildcards: sample=ecoli_state1_rep1
    resources: mem=4000

Finished job 1.
3 of 5 steps (60%) done

rule sleuth:
    input: metadata.tsv
    output: outs/objects/sleuth.differential_expression.tsv, outs/objects/sleuth.object.RDS
    jobid: 2

Finished job 2.
4 of 5 steps (80%) done

localrule all:
    input: ecoli_cdna/ecoli_state1_rep1.fastq.gz, ecoli_cdna/ecoli_state1_rep2.fastq.gz, ecoli_cdna/ecoli_state2_rep1.fastq.gz, ecoli_cdna/ecoli_state2_rep2.fastq.gz, outs/counts/ecoli_state1_rep1/abundance.tsv, outs/counts/ecoli_state1_rep2/abundance.tsv, outs/counts/ecoli_state2_rep1/abundance.tsv, outs/counts/ecoli_state2_rep2/abundance.tsv, metadata.tsv, outs/objects/sleuth.object.RDS
    jobid: 0

Finished job 0.
5 of 5 steps (100%) done
Complete log: /Users/varma/Code/Interviews/kallisto_sleuth/.snakemake/log/2018-05-01T043242.193561.snakemake.log
